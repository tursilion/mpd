xb2gpl <input text file> <grom base address in hex> <output text file>
*
  Invalid line number or no keyword?
*100 REM GPL AORG >1900
        AORG >1900
*110 REM GPL BSS 6
* Skipping 6 bytes in scratchpad, reserving >8300 to >8306
*120 CALL INIT
*130 REM CONFIGURATION TOOL FOR MPD
*140 REM XB VERSION FOR MOCK-UP
*150 REM TO BE PORTED TO GPL
*160 CALL CLEAR
  1900: ALL >20
* 07,20,

*170 DEFAULT0=1
* Mapping 'default0' to >8306
  1902: ST @>8306,>01
* BE,06,01,

*180 DEFAULT1=6
* Mapping 'default1' to >8307
  1905: ST @>8307,>06
* BE,07,06,

*190 DEFAULT2=7
* Mapping 'default2' to >8308
  1908: ST @>8308,>07
* BE,08,07,

*200 CALL CHARSET
  190B: DST @>834A,>0900
  190F: CALL GROM@>0018
* BF,4A,09,00,06,00,18,

*210 CALL CHAR(97,"000000000F080808")
*220 CALL CHAR(98,"00AAAAAAFFFE0000")
*230 CALL CHAR(99,"00000000E0202020")
*240 CALL CHAR(100,"7C0C7C0C7C0C7C08")
*250 CALL CHAR(101,"387CEED6EE7C3800")
*260 CALL CHAR(102,"7C607C607C607C20")
*270 CALL CHAR(103,"08080F0000000000")
*280 CALL CHAR(104,"00FEFFAAAAAA0000")
*290 CALL CHAR(105,"2020E00000000000")
*300 DISPLAY AT(1,1):"abc                     abc"
  1912: MOVE >0048 TO VDP@>0B08 FROM GROM@>191C
  1919: B GROM@>1964
  191C: BYTE >00,>00,>00,>00,>0F,>08,>08,>08,
  1924: BYTE >00,>AA,>AA,>AA,>FF,>FE,>00,>00,
  192C: BYTE >00,>00,>00,>00,>E0,>20,>20,>20,
  1934: BYTE >7C,>0C,>7C,>0C,>7C,>0C,>7C,>08,
  193C: BYTE >38,>7C,>EE,>D6,>EE,>7C,>38,>00,
  1944: BYTE >7C,>60,>7C,>60,>7C,>60,>7C,>20,
  194C: BYTE >08,>08,>0F,>00,>00,>00,>00,>00,
  1954: BYTE >00,>FE,>FF,>AA,>AA,>AA,>00,>00,
  195C: BYTE >20,>20,>E0,>00,>00,>00,>00,>00,
* 31,00,48,AB,08,19,1C,05,
* 19,64,00,00,00,00,0F,08,
* 08,08,00,AA,AA,AA,FF,FE,
* 00,00,00,00,00,00,E0,20,
* 20,20,7C,0C,7C,0C,7C,0C,
* 7C,08,38,7C,EE,D6,EE,7C,
* 38,00,7C,60,7C,60,7C,60,
* 7C,20,08,08,0F,00,00,00,
* 00,00,00,FE,FF,AA,AA,AA,
* 00,00,20,20,E0,00,00,00,
* 00,00,

*300 DISPLAY AT(1,1):"abc                     abc"
  1964: FMT
  1965:   COL 3
  1967:   ROW 1
  1969:   HTEX 27 "abc                     abc"
*310 DISPLAY AT(2,1):"def  MPD CONFIGURATION  def"
  1985:   COL+ 5
  1986:   HTEX 27 "def  MPD CONFIGURATION  def"
*320 DISPLAY AT(3,1):"ghi                     ghi"
  19A2:   COL+ 5
  19A3:   HTEX 27 "ghi                     ghi"
*330 DISPLAY AT(4,4):"GROM 0:"
  19BF:   COL+ 8
  19C0:   HTEX 7 "GROM 0:"
*340 DISPLAY AT(6,6):"A 99/4      (1979)"
  19C8:   COL+ 27
  19C9:   ROW+ 1
  19CA:   HTEX 18 "A 99/4      (1979)"
*350 DISPLAY AT(7,6):"B 99/4A     (1981)"
  19DD:   COL+ 14
  19DE:   HTEX 18 "B 99/4A     (1981)"
*360 DISPLAY AT(8,6):"C 99/4Av2.2 (1983)"
  19F1:   COL+ 14
  19F2:   HTEX 18 "C 99/4Av2.2 (1983)"
*370 DISPLAY AT(9,6):"D 99/8      (UNRL)"
  1A05:   COL+ 14
  1A06:   HTEX 18 "D 99/8      (UNRL)"
*380 DISPLAY AT(10,6):"E TURSI MENU(2011)"
  1A19:   COL+ 14
  1A1A:   HTEX 18 "E TURSI MENU(2011)"
*390 DISPLAY AT(12,4):"GROM 1&2:"
  1A2D:   COL+ 12
  1A2E:   ROW+ 1
  1A2F:   HTEX 9 "GROM 1&2:"
*400 DISPLAY AT(14,6):"F TI BASIC"
  1A39:   COL+ 25
  1A3A:   ROW+ 1
  1A3B:   HTEX 10 "F TI BASIC"
*410 DISPLAY AT(15,6):"G E/A COMPLETE"
  1A46:   COL+ 22
  1A47:   HTEX 14 "G E/A COMPLETE"
*420 DISPLAY AT(16,6):"H DISK MGR 1000 &"
  1A56:   COL+ 18
  1A57:   HTEX 17 "H DISK MGR 1000 &"
*430 DISPLAY AT(17,8):"ARCHIVER 3.03"
  1A69:   COL+ 17
  1A6A:   HTEX 13 "ARCHIVER 3.03"
*440 DISPLAY AT(19,6):"0 ERASE ALL EEPROM"
  1A78:   COL+ 17
  1A79:   ROW+ 1
  1A7A:   HTEX 18 "0 ERASE ALL EEPROM"
*450 DISPLAY AT(22,4):"PRESS ENTER TO SAVE"
  1A8D:   COL+ 12
  1A8E:   ROW+ 2
  1A8F:   HTEX 19 "PRESS ENTER TO SAVE"
*460 GOSUB 1220
  1AA3: ENDFMT
* 08,FF,02,FE,00,1A,61,62,
* 63,20,20,20,20,20,20,20,
* 20,20,20,20,20,20,20,20,
* 20,20,20,20,20,20,61,62,
* 63,84,1A,64,65,66,20,20,
* 4D,50,44,20,43,4F,4E,46,
* 49,47,55,52,41,54,49,4F,
* 4E,20,20,64,65,66,84,1A,
* 67,68,69,20,20,20,20,20,
* 20,20,20,20,20,20,20,20,
* 20,20,20,20,20,20,20,20,
* 67,68,69,87,06,47,52,4F,
* 4D,20,30,3A,9A,A0,11,41,
* 20,39,39,2F,34,20,20,20,
* 20,20,20,28,31,39,37,39,
* 29,8D,11,42,20,39,39,2F,
* 34,41,20,20,20,20,20,28,
* 31,39,38,31,29,8D,11,43,
* 20,39,39,2F,34,41,76,32,
* 2E,32,20,28,31,39,38,33,
* 29,8D,11,44,20,39,39,2F,
* 38,20,20,20,20,20,20,28,
* 55,4E,52,4C,29,8D,11,45,
* 20,54,55,52,53,49,20,4D,
* 45,4E,55,28,32,30,31,31,
* 29,8B,A0,08,47,52,4F,4D,
* 20,31,26,32,3A,98,A0,09,
* 46,20,54,49,20,42,41,53,
* 49,43,95,0D,47,20,45,2F,
* 41,20,43,4F,4D,50,4C,45,
* 54,45,91,10,48,20,44,49,
* 53,4B,20,4D,47,52,20,31,
* 30,30,30,20,26,90,0C,41,
* 52,43,48,49,56,45,52,20,
* 33,2E,30,33,90,A0,11,30,
* 20,45,52,41,53,45,20,41,
* 4C,4C,20,45,45,50,52,4F,
* 4D,8B,A1,12,50,52,45,53,
* 53,20,45,4E,54,45,52,20,
* 54,4F,20,53,41,56,45,FB,

*460 GOSUB 1220
  1AA4: CALL G@L1220
* 06,00,00,

*470 GOSUB 1450
  1AA7: CALL G@L1450
* 06,00,00,

*480 CALL KEY(0,K,S)
  1AAA: ST @>8374,>00
  1AAD: SCAN
*490 IF S=0 THEN 480
  1AAE: BR G@L480
* Mapping 'k' to >8375
* BE,74,00,03,40,00,

*500 CALL HCHAR(24,1,32,32)
  1AB0: FMT
  1AB1:   COL 1
  1AB3:   ROW 24
  1AB5:   HCHAR 32,32
*510 IF K=48 THEN 1010
  1AB7: ENDFMT
* 08,FF,00,FE,17,5F,20,FB,

*510 IF K=48 THEN 1010
  1AB8: CEQ @>8375,>30
  1ABB: BS G@L1010
* D6,75,30,60,00,

*520 IF K<65 THEN 550
  1ABD: CHE @>8375,>41
  1AC0: BR G@L550
* CA,75,41,40,00,

*530 IF K>69 THEN 550
  1AC2: CH @>8375,>45
  1AC5: BS G@L550
* C6,75,45,60,00,

*540 GOTO 860
  1AC7: B G@L860
* 05,00,00,

*550 IF K<70 THEN 580
  1ACA: CHE @>8375,>46
  1ACD: BR G@L580
* CA,75,46,40,00,

*560 IF K>72 THEN 580
  1ACF: CH @>8375,>48
  1AD2: BS G@L580
* C6,75,48,60,00,

*570 GOTO 890
  1AD4: B G@L890
* 05,00,00,

*580 IF K<>13 THEN 480
  1AD7: CEQ @>8375,>0D
  1ADA: BR G@L480
* D6,75,0D,40,00,

*590 CALL HCHAR(22,1,32,32)
  1ADC: FMT
  1ADD:   COL 1
  1ADF:   ROW 22
  1AE1:   HCHAR 32,32
*600 DISPLAY AT(22,9):"SAVING..."
  1AE3:   COL+ 10
  1AE4:   ROW+ 23
  1AE5:   HTEX 9 "SAVING..."
*610 REM IF THE GROM1/2 SELECTION IS TI BASIC, WE MUST MAKE
  1AEF: ENDFMT
* 08,FF,00,FE,15,5F,20,89,
* B6,08,53,41,56,49,4E,47,
* 2E,2E,2E,FB,

*610 REM IF THE GROM1/2 SELECTION IS TI BASIC, WE MUST MAKE
*620 REM SURE TO PICK THE RIGHT TI BASIC. OTHERWISE, WE
*630 REM JUST MAKE SURE GROM2 IS GROM1+1
*640 IF GROM1<9 THEN 730
* Mapping 'grom1' to >8309
  1AF0: CHE @>8309,>09
  1AF3: BR G@L730
* CA,09,09,40,00,

*650 IF GROM1<13 THEN 700
  1AF5: CHE @>8309,>0D
  1AF8: BR G@L700
* CA,09,0D,40,00,

*660 REM SELECT DM1000
*670 GROM1=13
  1AFA: ST @>8309,>0D
* BE,09,0D,

*680 GROM2=14
* Mapping 'grom2' to >830A
  1AFD: ST @>830A,>0E
* BE,0A,0E,

*690 GOTO 790
  1B00: B G@L790
* 05,00,00,

*700 REM SELECT E/A Complete
*705 GROM1=9
  1B03: ST @>8309,>09
* BE,09,09,

*710 GROM2=10
  1B06: ST @>830A,>0A
* BE,0A,0A,

*720 GOTO 790
  1B09: B G@L790
* 05,00,00,

*730 REM ONLY THE 99/4 IS SPECIAL, ALL OTHERS GET THE 4A BASIC
*740 GROM1=7
  1B0C: ST @>8309,>07
* BE,09,07,

*750 GROM2=8
  1B0F: ST @>830A,>08
* BE,0A,08,

*760 IF GROM0<>0 THEN 790
* Mapping 'grom0' to >830B
  1B12: CEQ @>830B,>00
  1B15: BR G@L790
* D6,0B,00,40,00,

*770 GROM1=5
  1B17: ST @>8309,>05
* BE,09,05,

*780 GROM2=6
  1B1A: ST @>830A,>06
* BE,0A,06,

*790 REM STORE GROM0,GROM1,GROM2 IN EEPROM
*795 A=NOT GROM0
* Mapping 'a' to >830C
  1B1D: ST @>830C,@>830B
  1B20: INV @>830C
* BC,0C,0B,84,0C,

*800 CALL LOAD(-32000,GROM0,A)
  1B22: ST @>8300,@>830B
  1B25: ST @>8301,@>830C
* BC,00,0B,BC,01,0C,

*805 A=NOT GROM1
  1B28: ST @>830C,@>8309
  1B2B: INV @>830C
* BC,0C,09,84,0C,

*810 CALL LOAD(-31998,GROM1,A)
  1B2D: ST @>8302,@>8309
  1B30: ST @>8303,@>830C
* BC,02,09,BC,03,0C,

*815 A=NOT GROM2
  1B33: ST @>830C,@>830A
  1B36: INV @>830C
* BC,0C,0A,84,0C,

*820 CALL LOAD(-31996,GROM2,A)
  1B38: ST @>8304,@>830A
  1B3B: ST @>8305,@>830C
* BC,04,0A,BC,05,0C,

*830 REM GPL MOVE >0006 TO G@>4000 FROM @>8300
  1B3F: MOVE >0006 TO G@>4000 FROM @>8300
* 25,00,06,40,00,00,

*840 REM EXIT/REBOOT
*850 STOP
  1B44: EXIT
* 0B,

*860 GROM0=K-65
  1B45: ST @>830B,@>8375
  1B48: SUB @>830B,>41
* BC,0B,75,A6,0B,41,

*870 GOSUB 1450
  1B4B: CALL G@L1450
* 06,00,00,

*880 GOTO 480
  1B4E: B G@L480
* 05,00,00,

*890 REM WE'LL JUST SET THE FIRST TI BASIC, IT WILL BE SORTED IN THE
*900 REM SAVE FUNCTION TO AVOID SELECTION BUGS
*910 IF K<>70 THEN 930
  1B51: CEQ @>8375,>46
  1B54: BR G@L930
* D6,75,46,40,00,

*920 GROM1=5
  1B56: ST @>8309,>05
* BE,09,05,

*930 IF K<>71 THEN 960
  1B59: CEQ @>8375,>47
  1B5C: BR G@L960
* D6,75,47,40,00,

*940 GROM1=9
  1B5E: ST @>8309,>09
* BE,09,09,

*950 GOSUB 1730
  1B61: CALL G@L1730
* 06,00,00,

*960 IF K<>72 THEN 990
  1B64: CEQ @>8375,>48
  1B67: BR G@L990
* D6,75,48,40,00,

*970 GROM1=13
  1B69: ST @>8309,>0D
* BE,09,0D,

*980 GOSUB 1730
  1B6C: CALL G@L1730
* 06,00,00,

*990 GOSUB 1450
  1B6F: CALL G@L1450
* 06,00,00,

*1000 GOTO 480
  1B72: B G@L480
* 05,00,00,

*1010 REM RELOADS DEFAULTS 99/4A CONSOLE AND ERASES EEPROM
*1020 CALL VCHAR(6,6,32,5)
  1B75: FMT
  1B76:   COL 6
  1B78:   ROW 6
  1B7A:   VCHAR 32,5
*1030 CALL VCHAR(14,6,32,3)
  1B7C:   ROW+ 3
  1B7D:   VCHAR 32,3
*1040 CALL HCHAR(19,6,42)
  1B7F:   ROW+ 2
  1B80:   HCHAR 42,1
*1050 DISPLAY AT(20,8):"ARE YOU SURE? Y/N"
  1B82:   COL+ 3
  1B83:   ROW+ 1
  1B84:   HTEX 17 "ARE YOU SURE? Y/N"
*1060 CALL KEY(0,K,S)
  1B96: ENDFMT
* 08,FF,05,FE,05,64,20,A2,
* 62,20,A1,40,2A,82,A0,10,
* 41,52,45,20,59,4F,55,20,
* 53,55,52,45,3F,20,59,2F,
* 4E,FB,

*1060 CALL KEY(0,K,S)
  1B97: ST @>8374,>00
  1B9A: SCAN
*1070 IF K=89 THEN 1100
* (Warning: Status variable not available later in program)
* BE,74,00,03,

*1070 IF K=89 THEN 1100
  1B9B: CEQ @>8375,>59
  1B9E: BS G@L1100
* D6,75,59,60,00,

*1080 IF K<>78 THEN 1060
  1BA0: CEQ @>8375,>4E
  1BA3: BR G@L1060
* D6,75,4E,40,00,

*1090 GOTO 1180
  1BA5: B G@L1180
* 05,00,00,

*1100 CALL HCHAR(20,1,32,32)
  1BA8: FMT
  1BA9:   COL 1
  1BAB:   ROW 20
  1BAD:   HCHAR 32,32
*1110 DISPLAY AT(20,9):"ERASING..."
  1BAF:   COL+ 10
  1BB0:   ROW+ 23
  1BB1:   HTEX 10 "ERASING..."
*1120 REM ERASE ALL 2K OF EEPROM!!
  1BBC: ENDFMT
* 08,FF,00,FE,13,5F,20,89,
* B6,09,45,52,41,53,49,4E,
* 47,2E,2E,2E,FB,

*1120 REM ERASE ALL 2K OF EEPROM!!
*1130 CALL LOAD(-32000,0)
  1BBD: ST @>8300,>00
* BE,00,00,

*1135 REM GPL MOVE >0001 to G@>4000 FROM @>8300
  1BC1: MOVE >0001 TO G@>4000 FROM @>8300
* 25,00,01,40,00,00,

*1140 REM GPL MOVE >07FF TO G@>4001 FROM G@>4000
  1BC7: MOVE >07FF TO G@>4001 FROM G@>4000
* 21,07,FF,40,01,40,00,

*1150 GROM0=DEFAULT0
  1BCD: ST @>830B,@>8306
* BC,0B,06,

*1160 GROM1=DEFAULT1
  1BD0: ST @>8309,@>8307
* BC,09,07,

*1170 GROM2=DEFAULT2
  1BD3: ST @>830A,@>8308
* BC,0A,08,

*1180 CALL HCHAR(20,1,32,32)
  1BD6: FMT
  1BD7:   COL 1
  1BD9:   ROW 20
  1BDB:   HCHAR 32,32
*1190 CALL HCHAR(19,6,32)
  1BDD:   COL+ 5
  1BDE:   ROW+ 22
  1BDF:   HCHAR 32,1
*1200 GOSUB 1450
  1BE1: ENDFMT
* 08,FF,00,FE,13,5F,20,84,
* B5,40,20,FB,

*1200 GOSUB 1450
  1BE2: CALL G@L1450
* 06,00,00,

*1210 GOTO 480
  1BE5: B G@L480
* 05,00,00,

*1220 REM READ CONFIGURATION SETTINGS
*1230 REM BANK EPROM IN
*1235 CALL LOAD(-32000,17);
  1BE8: ST @>8300,>11
* BE,00,11,

*1240 REM GPL MOVE >0001 TO G@>1F12 FROM @>8300
  1BEC: MOVE >0001 TO G@>1F12 FROM @>8300
* 25,00,01,1F,12,00,

*1250 REM GPL MOVE >0006 TO @>8300 FROM G@>4000
  1BF2: MOVE >0006 TO @>8300 FROM G@>4000
* 31,00,06,00,40,00,

*1260 ERR=0
* Mapping 'err' to >830D
  1BF7: ST @>830D,>00
* BE,0D,00,

*1270 CALL PEEK(-32000,GROM0,B)
  1BFA: ST @>830B,@>8300
* Mapping 'b' to >830E
  1BFD: ST @>830E,@>8301
* BC,0B,00,BC,0E,01,

*1280 B=NOT B
  1C00: INV @>830E
* 84,0E,

*1290 IF GROM0=B THEN 1320
  1C02: CEQ @>830B,@>830E
  1C05: BS G@L1320
* D4,0B,0E,60,00,

*1300 GROM0=DEFAULT0
  1C07: ST @>830B,@>8306
* BC,0B,06,

*1310 ERR=1
  1C0A: ST @>830D,>01
* BE,0D,01,

*1320 CALL PEEK(-31998,GROM1,B)
  1C0D: ST @>8309,@>8302
  1C10: ST @>830E,@>8303
* BC,09,02,BC,0E,03,

*1330 B=NOT B
  1C13: INV @>830E
* 84,0E,

*1340 IF GROM1=B THEN 1370
  1C15: CEQ @>8309,@>830E
  1C18: BS G@L1370
* D4,09,0E,60,00,

*1350 GROM1=DEFAULT1
  1C1A: ST @>8309,@>8307
* BC,09,07,

*1360 ERR=1
  1C1D: ST @>830D,>01
* BE,0D,01,

*1370 CALL PEEK(-31996,GROM2,B)
  1C20: ST @>830A,@>8304
  1C23: ST @>830E,@>8305
* BC,0A,04,BC,0E,05,

*1380 B=NOT B
  1C26: INV @>830E
* 84,0E,

*1390 IF GROM2=B THEN 1420
  1C28: CEQ @>830A,@>830E
  1C2B: BS G@L1420
* D4,0A,0E,60,00,

*1400 GROM2=DEFAULT2
  1C2D: ST @>830A,@>8308
* BC,0A,08,

*1410 ERR=1
  1C30: ST @>830D,>01
* BE,0D,01,

*1420 IF ERR=0 THEN 1440
  1C33: CEQ @>830D,>00
  1C36: BS G@L1440
* D6,0D,00,60,00,

*1430 DISPLAY AT(24,3):"EEPROM SETTINGS INVALID"
  1C38: FMT
  1C39:   COL 5
  1C3B:   ROW 24
  1C3D:   HTEX 23 "EEPROM SETTINGS INVALID"
*1440 RETURN
  1C55: ENDFMT
* 08,FF,04,FE,17,16,45,45,
* 50,52,4F,4D,20,53,45,54,
* 54,49,4E,47,53,20,49,4E,
* 56,41,4C,49,44,FB,

*1440 RETURN
  1C56: RTN
* 00,

*1450 REM DRAW SELECTION ASTERISKS
*1460 CALL VCHAR(6,6,32,5)
  1C57: FMT
  1C58:   COL 6
  1C5A:   ROW 6
  1C5C:   VCHAR 32,5
*1470 CALL VCHAR(14,6,32,3)
  1C5E:   ROW+ 3
  1C5F:   VCHAR 32,3
*1480 IF GROM0<>0 THEN 1510
  1C61: ENDFMT
* 08,FF,05,FE,05,64,20,A2,
* 62,20,FB,

*1480 IF GROM0<>0 THEN 1510
  1C62: CEQ @>830B,>00
  1C65: BR G@L1510
* D6,0B,00,40,00,

*1490 CALL HCHAR(6,6,42)
  1C67: FMT
  1C68:   COL 6
  1C6A:   ROW 6
  1C6C:   HCHAR 42,1
*1500 GOTO 1650
  1C6E: ENDFMT
* 08,FF,05,FE,05,40,2A,FB,

*1500 GOTO 1650
  1C6F: B G@L1650
* 05,00,00,

*1510 IF GROM0<>1 THEN 1540
  1C72: CEQ @>830B,>01
  1C75: BR G@L1540
* D6,0B,01,40,00,

*1520 CALL HCHAR(7,6,42)
  1C77: FMT
  1C78:   COL 6
  1C7A:   ROW 7
  1C7C:   HCHAR 42,1
*1530 GOTO 1650
  1C7E: ENDFMT
* 08,FF,05,FE,06,40,2A,FB,

*1530 GOTO 1650
  1C7F: B G@L1650
* 05,00,00,

*1540 IF GROM0<>2 THEN 1570
  1C82: CEQ @>830B,>02
  1C85: BR G@L1570
* D6,0B,02,40,00,

*1550 CALL HCHAR(8,6,42)
  1C87: FMT
  1C88:   COL 6
  1C8A:   ROW 8
  1C8C:   HCHAR 42,1
*1560 GOTO 1650
  1C8E: ENDFMT
* 08,FF,05,FE,07,40,2A,FB,

*1560 GOTO 1650
  1C8F: B G@L1650
* 05,00,00,

*1570 IF GROM0<>3 THEN 1600
  1C92: CEQ @>830B,>03
  1C95: BR G@L1600
* D6,0B,03,40,00,

*1580 CALL HCHAR(9,6,42)
  1C97: FMT
  1C98:   COL 6
  1C9A:   ROW 9
  1C9C:   HCHAR 42,1
*1590 GOTO 1650
  1C9E: ENDFMT
* 08,FF,05,FE,08,40,2A,FB,

*1590 GOTO 1650
  1C9F: B G@L1650
* 05,00,00,

*1600 IF GROM0<>4 THEN 1630
  1CA2: CEQ @>830B,>04
  1CA5: BR G@L1630
* D6,0B,04,40,00,

*1610 CALL HCHAR(10,6,42)
  1CA7: FMT
  1CA8:   COL 6
  1CAA:   ROW 10
  1CAC:   HCHAR 42,1
*1620 GOTO 1650
  1CAE: ENDFMT
* 08,FF,05,FE,09,40,2A,FB,

*1620 GOTO 1650
  1CAF: B G@L1650
* 05,00,00,

*1630 IF GROM0<>5 THEN 1650
  1CB2: CEQ @>830B,>05
  1CB5: BR G@L1650
* D6,0B,05,40,00,

*1640 CALL HCHAR(11,6,42)
  1CB7: FMT
  1CB8:   COL 6
  1CBA:   ROW 11
  1CBC:   HCHAR 42,1
*1650 IF GROM1>7 THEN 1680
  1CBE: ENDFMT
* 08,FF,05,FE,0A,40,2A,FB,

*1650 IF GROM1>7 THEN 1680
  1CBF: CH @>8309,>07
  1CC2: BS G@L1680
* C6,09,07,60,00,

*1660 CALL HCHAR(14,6,42)
  1CC4: FMT
  1CC5:   COL 6
  1CC7:   ROW 14
  1CC9:   HCHAR 42,1
*1670 GOTO 1720
  1CCB: ENDFMT
* 08,FF,05,FE,0D,40,2A,FB,

*1670 GOTO 1720
  1CCC: B G@L1720
* 05,00,00,

*1680 IF GROM1>11 THEN 1710
  1CCF: CH @>8309,>0B
  1CD2: BS G@L1710
* C6,09,0B,60,00,

*1690 CALL HCHAR(15,6,42)
  1CD4: FMT
  1CD5:   COL 6
  1CD7:   ROW 15
  1CD9:   HCHAR 42,1
*1700 GOTO 1720
  1CDB: ENDFMT
* 08,FF,05,FE,0E,40,2A,FB,

*1700 GOTO 1720
  1CDC: B G@L1720
* 05,00,00,

*1710 CALL HCHAR(16,6,42)
  1CDF: FMT
  1CE0:   COL 6
  1CE2:   ROW 16
  1CE4:   HCHAR 42,1
*1720 RETURN
  1CE6: ENDFMT
* 08,FF,05,FE,0F,40,2A,FB,

*1720 RETURN
  1CE7: RTN
* 00,

*1730 DISPLAY AT(24,6):"32K RAM REQUIRED"
  1CE8: FMT
  1CE9:   COL 8
  1CEB:   ROW 24
  1CED:   HTEX 16 "32K RAM REQUIRED"
*1740 RETURN
  1CFE: ENDFMT
* 08,FF,07,FE,17,0F,33,32,
* 4B,20,52,41,4D,20,52,45,
* 51,55,49,52,45,44,FB,

*1740 RETURN
  1CFF: RTN
* 00,



* Absolute fixups:
*  >01A5 (>1AA5): G@L1220 = G@>1BE8
*  >01A8 (>1AA8): G@L1450 = G@>1C57
*  >01C8 (>1AC8): G@L860 = G@>1B45
*  >01D5 (>1AD5): G@L890 = G@>1B51
*  >0201 (>1B01): G@L790 = G@>1B1D
*  >020A (>1B0A): G@L790 = G@>1B1D
*  >024C (>1B4C): G@L1450 = G@>1C57
*  >024F (>1B4F): G@L480 = G@>1AAA
*  >0262 (>1B62): G@L1730 = G@>1CE8
*  >026D (>1B6D): G@L1730 = G@>1CE8
*  >0270 (>1B70): G@L1450 = G@>1C57
*  >0273 (>1B73): G@L480 = G@>1AAA
*  >02A6 (>1BA6): G@L1180 = G@>1BD6
*  >02E3 (>1BE3): G@L1450 = G@>1C57
*  >02E6 (>1BE6): G@L480 = G@>1AAA
*  >0370 (>1C70): G@L1650 = G@>1CBF
*  >0380 (>1C80): G@L1650 = G@>1CBF
*  >0390 (>1C90): G@L1650 = G@>1CBF
*  >03A0 (>1CA0): G@L1650 = G@>1CBF
*  >03B0 (>1CB0): G@L1650 = G@>1CBF
*  >03CD (>1CCD): G@L1720 = G@>1CE7
*  >03DD (>1CDD): G@L1720 = G@>1CE7

* Relative fixups:
*  >01AE (>1AAE): G@L480 = G@>1AAA
*  >01BB (>1ABB): G@L1010 = G@>1B75
*  >01C0 (>1AC0): G@L550 = G@>1ACA
*  >01C5 (>1AC5): G@L550 = G@>1ACA
*  >01CD (>1ACD): G@L580 = G@>1AD7
*  >01D2 (>1AD2): G@L580 = G@>1AD7
*  >01DA (>1ADA): G@L480 = G@>1AAA
*  >01F3 (>1AF3): G@L730 = G@>1B0C
*  >01F8 (>1AF8): G@L700 = G@>1B03
*  >0215 (>1B15): G@L790 = G@>1B1D
*  >0254 (>1B54): G@L930 = G@>1B59
*  >025C (>1B5C): G@L960 = G@>1B64
*  >0267 (>1B67): G@L990 = G@>1B6F
*  >029E (>1B9E): G@L1100 = G@>1BA8
*  >02A3 (>1BA3): G@L1060 = G@>1B97
*  >0305 (>1C05): G@L1320 = G@>1C0D
*  >0318 (>1C18): G@L1370 = G@>1C20
*  >032B (>1C2B): G@L1420 = G@>1C33
*  >0336 (>1C36): G@L1440 = G@>1C56
*  >0365 (>1C65): G@L1510 = G@>1C72
*  >0375 (>1C75): G@L1540 = G@>1C82
*  >0385 (>1C85): G@L1570 = G@>1C92
*  >0395 (>1C95): G@L1600 = G@>1CA2
*  >03A5 (>1CA5): G@L1630 = G@>1CB2
*  >03B5 (>1CB5): G@L1650 = G@>1CBF
*  >03C2 (>1CC2): G@L1680 = G@>1CCF
*  >03D2 (>1CD2): G@L1710 = G@>1CDF
